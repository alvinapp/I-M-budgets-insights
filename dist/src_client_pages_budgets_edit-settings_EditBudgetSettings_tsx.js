"use strict";
(self["webpackChunkbudgets_and_insights"] = self["webpackChunkbudgets_and_insights"] || []).push([["src_client_pages_budgets_edit-settings_EditBudgetSettings_tsx"],{

/***/ "./src/client/pages/budgets/edit-settings/EditBudgetSettings.tsx":
/*!***********************************************************************!*\
  !*** ./src/client/pages/budgets/edit-settings/EditBudgetSettings.tsx ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_NavBar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/NavBar */ "./src/client/pages/components/NavBar.tsx");
/* harmony import */ var _components_NavBarTitle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/NavBarTitle */ "./src/client/pages/components/NavBarTitle.tsx");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/dist/index.js");
/* harmony import */ var react_icons_fi__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! react-icons/fi */ "./node_modules/react-icons/fi/index.esm.js");
/* harmony import */ var _components_budget_BudgetDisplay__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../components/budget/BudgetDisplay */ "./src/client/pages/components/budget/BudgetDisplay.tsx");
/* harmony import */ var react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-query */ "./node_modules/react-query/es/index.js");
/* harmony import */ var client_api_categories__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! client/api/categories */ "./src/client/api/categories.ts");
/* harmony import */ var client_store_configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! client/store/configuration */ "./src/client/store/configuration.ts");
/* harmony import */ var client_store_categoriesStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! client/store/categoriesStore */ "./src/client/store/categoriesStore.ts");
/* harmony import */ var _components_budget_BudgetSettingCard__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../components/budget/BudgetSettingCard */ "./src/client/pages/components/budget/BudgetSettingCard.tsx");
/* harmony import */ var _components_budget_GeneralInfoCard__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/budget/GeneralInfoCard */ "./src/client/pages/components/budget/GeneralInfoCard.tsx");
/* harmony import */ var client_store_currencySettingsStore__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! client/store/currencySettingsStore */ "./src/client/store/currencySettingsStore.ts");
/* harmony import */ var client_api_budget__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! client/api/budget */ "./src/client/api/budget.ts");
/* harmony import */ var client_api_token__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! client/api/token */ "./src/client/api/token.ts");
/* harmony import */ var client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! client/utils/Toast */ "./src/client/utils/Toast.ts");
/* harmony import */ var client_store_userStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! client/store/userStore */ "./src/client/store/userStore.ts");
/* harmony import */ var client_pages_components_BackButton__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! client/pages/components/BackButton */ "./src/client/pages/components/BackButton.tsx");
/* harmony import */ var client_store_budgetSettingsStore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! client/store/budgetSettingsStore */ "./src/client/store/budgetSettingsStore.ts");
/* harmony import */ var client_store_bottomSheetStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! client/store/bottomSheetStore */ "./src/client/store/bottomSheetStore.ts");
/* harmony import */ var react_spring_bottom_sheet__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! react-spring-bottom-sheet */ "./node_modules/react-spring-bottom-sheet/dist/index.es.js");
/* harmony import */ var _SavingsGoalConfirmation__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../SavingsGoalConfirmation */ "./src/client/pages/budgets/SavingsGoalConfirmation.tsx");
/* harmony import */ var client_pages_components_budget_SuccessfullCreatedView__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! client/pages/components/budget/SuccessfullCreatedView */ "./src/client/pages/components/budget/SuccessfullCreatedView.tsx");
/* harmony import */ var client_assets_images_success_icon_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! client/assets/images/success-icon.svg */ "./src/client/assets/images/success-icon.svg");
/* harmony import */ var client_utils_MockData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! client/utils/MockData */ "./src/client/utils/MockData.tsx");
/* harmony import */ var client_pages_components_DebtViewCard__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! client/pages/components/DebtViewCard */ "./src/client/pages/components/DebtViewCard.tsx");
/* harmony import */ var client_utils_Formatters__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! client/utils/Formatters */ "./src/client/utils/Formatters.ts");




























const EditBudgetSettings = () => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1;
    const [savingsSuccess, setSavingsSuccess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const savingsBottomSheetStore = (0,client_store_bottomSheetStore__WEBPACK_IMPORTED_MODULE_3__.useSavingsBottomSheetStore)((state) => state);
    const configurations = (0,client_store_configuration__WEBPACK_IMPORTED_MODULE_4__.useConfigurationStore)((state) => state.configuration);
    const categoriesStore = (0,client_store_categoriesStore__WEBPACK_IMPORTED_MODULE_5__["default"])((state) => state);
    const setToken = (0,client_store_configuration__WEBPACK_IMPORTED_MODULE_4__.useConfigurationStore)((state) => state.setToken);
    const userStore = (0,client_store_userStore__WEBPACK_IMPORTED_MODULE_6__["default"])((state) => state);
    const budgetSettingsStore = (0,client_store_budgetSettingsStore__WEBPACK_IMPORTED_MODULE_7__.useBudgetSettingsStore)();
    const setUser = userStore.setUser;
    const { data } = (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)(["token"], () => (0,client_api_token__WEBPACK_IMPORTED_MODULE_8__["default"])(configurations).then((res) => {
        if (typeof res.user !== "undefined") {
            setUser(res.user);
            setToken(res.token);
        }
        else {
            navigate("/");
            (0,client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__.showCustomToast)({ message: "The sdk key is invalid" });
        }
    }), { refetchOnWindowFocus: false });
    const mapCategoryToData = (category, index) => [
        `data${index}`,
        {
            amount: (category === null || category === void 0 ? void 0 : category.amount) || 0,
            contribution_amount: 0,
            percentage: 0,
            category_id: category === null || category === void 0 ? void 0 : category.category.id,
            name: category === null || category === void 0 ? void 0 : category.name,
            pseudo_name: (category === null || category === void 0 ? void 0 : category.name) + " " + (category === null || category === void 0 ? void 0 : category.category.emoji),
            extern_id: category === null || category === void 0 ? void 0 : category.category.id,
            order: 0,
            contribution_at: "",
            is_contribute_customized: true,
        },
    ];
    const { isFetching: fetchingCategories } = (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)("fetch-categories", () => (0,client_api_categories__WEBPACK_IMPORTED_MODULE_10__.getCategories)({ configuration: configurations }).then((result) => {
        categoriesStore.setCategories(result);
        const mapper = (type) => (category, index) => {
            var _a;
            ((_a = category.macro_type) === null || _a === void 0 ? void 0 : _a.name) === type
                ? mapCategoryToData(category, index)
                : null;
        };
        const essentialsData = result.map(mapper("Essentials")).filter(Boolean);
        const wantsData = result.map(mapper("Wants")).filter(Boolean);
        setEssentialsMapState(new Map(essentialsData));
        setWantsMapState(new Map(wantsData));
    }), { refetchOnWindowFocus: false });
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        const initializeMapState = (index, setStateFn) => {
            if (categoriesStore.categoryBudgets &&
                categoriesStore.categoryBudgets.length > index) {
                const initialData = categoriesStore.categoryBudgets[index].data.map(mapCategoryToData);
                setStateFn(new Map(initialData));
            }
        };
        initializeMapState(0, setEssentialsMapState);
        initializeMapState(1, setWantsMapState);
    }, [categoriesStore.categoryBudgets]);
    const { isFetching: fetchingMacros } = (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)("fetch-macros", () => (0,client_api_budget__WEBPACK_IMPORTED_MODULE_11__.fetchMacros)({ configuration: configurations }).then((res) => {
        categoriesStore.setMacros(res);
    }), { refetchOnWindowFocus: false, enabled: !!configurations.token });
    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_12__.useNavigate)();
    const currencySymbol = (0,client_store_currencySettingsStore__WEBPACK_IMPORTED_MODULE_13__["default"])((state) => state.currencySymbol);
    const [essentialsMapState, setEssentialsMapState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());
    const [wantsMapState, setWantsMapState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());
    const updateEssentialsMap = (i, data) => {
        setEssentialsMapState((map) => new Map(map.set(`data${i}`, data)));
    };
    const updateWantsMap = (i, data) => {
        setWantsMapState((map) => new Map(map.set(`data${i}`, data)));
    };
    //essentials
    const essentialsList = Array.from(essentialsMapState, ([key, value]) => {
        return { [key]: value };
    }).map((element, i) => {
        return element[`data${i}`];
    });
    //wants
    const wantsList = Array.from(wantsMapState, ([key, value]) => {
        return { [key]: value };
    }).map((element, i) => {
        return element[`data${i}`];
    });
    const navigator = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_12__.useNavigate)();
    const macroData = (_b = (_a = categoriesStore.macros) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : [];
    const essentialMacro = macroData[0];
    const wantslMacro = macroData[1];
    const savingsMacro = macroData[2];
    const essentialGoals = (_c = essentialMacro === null || essentialMacro === void 0 ? void 0 : essentialMacro.goals) !== null && _c !== void 0 ? _c : [];
    const wantsGoals = (_d = wantslMacro === null || wantslMacro === void 0 ? void 0 : wantslMacro.goals) !== null && _d !== void 0 ? _d : [];
    const savingsGoals = (_e = savingsMacro === null || savingsMacro === void 0 ? void 0 : savingsMacro.goals) !== null && _e !== void 0 ? _e : [];
    const essentialBudgetAmount = (_g = (_f = essentialGoals[0]) === null || _f === void 0 ? void 0 : _f.amount) !== null && _g !== void 0 ? _g : "";
    const [allocatedEssentials, setAllocatedEssentials] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(typeof categoriesStore.categoryBudgets[0] !== undefined
        ? categoriesStore === null || categoriesStore === void 0 ? void 0 : categoriesStore.categoryBudgets[0].total_amount
        : 0);
    const wantsBudgetAmount = (_j = (_h = wantsGoals[0]) === null || _h === void 0 ? void 0 : _h.amount) !== null && _j !== void 0 ? _j : "";
    const [allocatedWants, setAllocatedWants] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(typeof categoriesStore.categoryBudgets[1] !== undefined
        ? (_k = categoriesStore === null || categoriesStore === void 0 ? void 0 : categoriesStore.categoryBudgets[1]) === null || _k === void 0 ? void 0 : _k.total_amount
        : 0);
    const savingsBudgetAmount = (_m = (_l = savingsGoals[0]) === null || _l === void 0 ? void 0 : _l.amount) !== null && _m !== void 0 ? _m : "";
    const [allocatedSavings, setAllocatedSavings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(typeof categoriesStore.categoryBudgets[2] !== undefined
        ? categoriesStore === null || categoriesStore === void 0 ? void 0 : categoriesStore.categoryBudgets[2].total_amount
        : 0);
    const [addSavings, setAddSavings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [savingsList, setSavingsList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([{}]);
    const budgetStore = (0,client_store_budgetSettingsStore__WEBPACK_IMPORTED_MODULE_7__.useBudgetSettingsStore)((state) => state);
    const { isFetching: savingBudgetDetails, refetch: saveBudgetInfo } = (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)("save-budget", () => {
        const macrotypeEntries = [];
        if (essentialsList.some((item) => Object.keys(item).length > 0)) {
            macrotypeEntries.push({
                macrotype_name: "Essentials",
                data: essentialsList,
            });
        }
        if (wantsList.some((item) => Object.keys(item).length > 0)) {
            macrotypeEntries.push({
                macrotype_name: "Wants",
                data: wantsList,
            });
        }
        if (savingsList.some((item) => Object.keys(item).length > 0)) {
            macrotypeEntries.push({
                macrotype_name: "Savings",
                data: savingsList,
            });
        }
        return (0,client_api_budget__WEBPACK_IMPORTED_MODULE_11__.saveBudget)({
            configuration: configurations,
            data: {
                macrotype_entries: macrotypeEntries,
            },
        });
    }, { refetchOnWindowFocus: false, enabled: false });
    const [selectedSavingsGoal, setSelectedSavingsGoal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({
        name: "",
    });
    const totalDebt = client_utils_MockData__WEBPACK_IMPORTED_MODULE_14__.allTimeDebt.reduce((accumulator, item) => {
        return (accumulator += item.amount);
    }, 0);
    const user = (0,client_store_userStore__WEBPACK_IMPORTED_MODULE_6__["default"])((state) => state);
    const linkedAccounts = user.user.external_linked_accounts.find((element) => (element === null || element === void 0 ? void 0 : element.name) === "M-Pesa");
    const finalLinkedAccounts = [linkedAccounts];
    const numberOfLinkedAccounts = (_o = finalLinkedAccounts.length) !== null && _o !== void 0 ? _o : 0;
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "h-screen w-screen" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_NavBar__WEBPACK_IMPORTED_MODULE_15__["default"], { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "flex flex-row items-center justify-between border border-b-1 pt-4 pb-2 pr-3.5" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(client_pages_components_BackButton__WEBPACK_IMPORTED_MODULE_16__["default"], { onClick: () => {
                                // call save-budget here
                                saveBudgetInfo();
                                navigate("/budgets-view");
                            } }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_NavBarTitle__WEBPACK_IMPORTED_MODULE_17__["default"], { title: "" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "h-6 w-6 rounded-full flex items-center justify-center", onClick: () => navigate("/view-info") })] })) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "flex flex-col mx-3.5" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "mb-3 mt-5" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_GeneralInfoCard__WEBPACK_IMPORTED_MODULE_18__.GeneralInfoCard, { iconBg: "bg-skin-iconPrimary", icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_icons_fi__WEBPACK_IMPORTED_MODULE_19__.FiCloud, {}), title: "Linked accounts", subtitle: "Track your spending easily across linked accounts and stay on top of your budget with insights.", caption: `${typeof numberOfLinkedAccounts === "undefined"
                                ? ""
                                : (0,client_utils_Formatters__WEBPACK_IMPORTED_MODULE_20__.checkNAN)(numberOfLinkedAccounts)}`, onClick: () => {
                                navigate("/linked-accounts");
                            } }) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "mb-3" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_GeneralInfoCard__WEBPACK_IMPORTED_MODULE_18__.GeneralInfoCard, { iconBg: "bg-skin-successWithOpacity", icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_icons_fi__WEBPACK_IMPORTED_MODULE_19__.FiBriefcase, {}), title: "Monthly net income", subtitle: "This is used as the basis for calculating your overall budget split.", caption: `${budgetSettingsStore.monthlyIncome !== 0
                                ? budgetSettingsStore.monthlyIncome.toString()
                                : (_r = (_q = (_p = userStore.user) === null || _p === void 0 ? void 0 : _p.income) === null || _q === void 0 ? void 0 : _q.toString()) !== null && _r !== void 0 ? _r : ""}`, currencySymbol: currencySymbol, onClick: () => navigate("/edit-monthly-income") }) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_GeneralInfoCard__WEBPACK_IMPORTED_MODULE_18__.GeneralInfoCard, { iconBg: "bg-skin-secondary3WithOpacity", icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_icons_fi__WEBPACK_IMPORTED_MODULE_19__.FiPieChart, {}), title: "Budget split", subtitle: "We recommend reserving 70% of your income after your monthly debt repayment commitments to Essentials then 30% for Wants. Tap here to edit.", caption: `${(_t = (_s = categoriesStore.macros) === null || _s === void 0 ? void 0 : _s.budget_split) !== null && _t !== void 0 ? _t : ""}`, onClick: () => {
                            var _a, _b;
                            if ((_a = categoriesStore.macros) === null || _a === void 0 ? void 0 : _a.budget_split) {
                                navigate("/edit-split-income");
                                budgetStore.setMonthlyIncome((_b = userStore.user) === null || _b === void 0 ? void 0 : _b.income);
                            }
                        } }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "mb-4 mt-5 flex flex-row items-center justify-center px-3.5" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "flex-grow h-px bg-skin-accent3" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-col" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_icons_fi__WEBPACK_IMPORTED_MODULE_19__.FiPieChart, { size: "1.5rem", color: "#555466" }) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "flex-grow h-px bg-skin-accent3" })] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "shadow-card px-4 pt-5 pb-3 mt-4.5 rounded-lg mb-4" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_BudgetDisplay__WEBPACK_IMPORTED_MODULE_21__.BudgetDisplay, { title: "Debt repayment", budgetAmount: savingsBudgetAmount, percentageOfBudgetCaption: `${(_v = (_u = savingsGoals[0]) === null || _u === void 0 ? void 0 : _u.share) !== null && _v !== void 0 ? _v : ""}% of overall budget`, unallocatedCaption: "Unallocated", allocatedCaption: "Allocated", unallocatedAmount: 0, allocatedAmount: totalDebt, progressPercentage: 100, indicatorColor: "bg-[#036AB3]", progressColor: "#036AB3" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "border mt-4 mb-4.5" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-col" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "flex flex-row justify-between items-center mb-4" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-sm tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Categories" })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-sm tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Budget allocation" }))] })), client_utils_MockData__WEBPACK_IMPORTED_MODULE_14__.allTimeDebt === null || client_utils_MockData__WEBPACK_IMPORTED_MODULE_14__.allTimeDebt === void 0 ? void 0 : client_utils_MockData__WEBPACK_IMPORTED_MODULE_14__.allTimeDebt.map((debt, index) => {
                                            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(client_pages_components_DebtViewCard__WEBPACK_IMPORTED_MODULE_22__["default"], { amount: (0,client_utils_Formatters__WEBPACK_IMPORTED_MODULE_20__.checkNAN)(Math.round(debt === null || debt === void 0 ? void 0 : debt.loanDetails.monthlyPayment)), icon: debt === null || debt === void 0 ? void 0 : debt.icon, goal: debt === null || debt === void 0 ? void 0 : debt.name }, index));
                                        })] }) }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "shadow-card px-4 pt-5 pb-3 rounded-lg" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_BudgetDisplay__WEBPACK_IMPORTED_MODULE_21__.BudgetDisplay, { title: "Essentials", budgetAmount: essentialBudgetAmount !== null && essentialBudgetAmount !== void 0 ? essentialBudgetAmount : 0, percentageOfBudgetCaption: `${(_x = (_w = essentialGoals[0]) === null || _w === void 0 ? void 0 : _w.share) !== null && _x !== void 0 ? _x : ""}% of overall budget`, unallocatedCaption: "Unallocated", allocatedCaption: "Allocated", unallocatedAmount: typeof parseInt(essentialBudgetAmount) === "number" &&
                                    essentialBudgetAmount > 0
                                    ? Math.max(essentialBudgetAmount - allocatedEssentials, 0)
                                    : 0 // Ensure perc
                                , allocatedAmount: allocatedEssentials, progressPercentage: typeof parseInt(essentialBudgetAmount) === "number" &&
                                    essentialBudgetAmount > 0
                                    ? Math.min((allocatedEssentials / essentialBudgetAmount) * 100, 100) // Ensure percentage stays between 0 and 100
                                    : 0, progressColor: "#009FDC", indicatorColor: "bg-[#009FDC]" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-row items-center justify-center mt-6 mb-4" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-skin-base font-primary text-xs tracking-wide" }, { children: "Add budgets to your Essentials below" })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "border mt-4 mb-4.5" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "flex flex-row justify-between items-center mb-4" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-xs tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Categories" })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-xs tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Budget allocation" }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-col" }, { children: categoriesStore.categoryBudgets[0] &&
                                    ((_y = categoriesStore.categoryBudgets[0].data) === null || _y === void 0 ? void 0 : _y.length) > 0
                                    ? categoriesStore.categoryBudgets[0].data.map((category, i) => {
                                        const data = essentialsMapState.get(`data${i}`);
                                        const initialAmount = (category === null || category === void 0 ? void 0 : category.amount) || 0;
                                        const adjustment = (data === null || data === void 0 ? void 0 : data.amount) || 0;
                                        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_BudgetSettingCard__WEBPACK_IMPORTED_MODULE_23__.BudgetSettingCard, { category: category === null || category === void 0 ? void 0 : category.name, emoji: category === null || category === void 0 ? void 0 : category.category.emoji, amount: data === null || data === void 0 ? void 0 : data.amount, maxValue: Number.MAX_SAFE_INTEGER, unallocatedAmount: typeof parseInt(essentialBudgetAmount) === "number" &&
                                                essentialBudgetAmount > 0
                                                ? Math.max(essentialBudgetAmount - allocatedEssentials, 0)
                                                : 0, addValue: (e) => {
                                                updateEssentialsMap(i, Object.assign(Object.assign({}, data), { amount: e }));
                                                setAllocatedEssentials(allocatedEssentials + e);
                                            }, updateValue: (newValue) => {
                                                const oldValue = (data === null || data === void 0 ? void 0 : data.amount) || 0;
                                                const valueDifference = newValue - oldValue;
                                                const newAllocatedEssentials = Math.max(0, allocatedEssentials + valueDifference);
                                                if (newAllocatedEssentials <= essentialBudgetAmount) {
                                                    setAllocatedEssentials(newAllocatedEssentials);
                                                    updateEssentialsMap(i, Object.assign(Object.assign({}, data), { amount: newValue }));
                                                }
                                                else {
                                                    (0,client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__.showCustomToast)({
                                                        message: "Budget limit exceeded",
                                                    });
                                                }
                                            }, increment: () => {
                                                const newAmount = ((data === null || data === void 0 ? void 0 : data.amount) || 0) +
                                                    categoriesStore.incrementalAmount;
                                                const totalAllocated = allocatedEssentials +
                                                    categoriesStore.incrementalAmount;
                                                if (totalAllocated <= essentialBudgetAmount) {
                                                    setAllocatedEssentials(totalAllocated);
                                                    updateEssentialsMap(i, Object.assign(Object.assign({}, data), { amount: newAmount }));
                                                }
                                                else {
                                                    // If the new total allocated budget exceeds the limit
                                                    (0,client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__.showCustomToast)({
                                                        message: "Budget limit exceeded",
                                                    });
                                                }
                                            }, decrement: () => {
                                                updateEssentialsMap(i, Object.assign(Object.assign({}, data), { amount: Math.max(adjustment - categoriesStore.incrementalAmount, 0) }));
                                                setAllocatedEssentials(allocatedEssentials -
                                                    categoriesStore.incrementalAmount);
                                            } }, i));
                                    })
                                    : null }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "shadow-card px-4 pt-5 pb-3 mt-4.5 rounded-lg" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_BudgetDisplay__WEBPACK_IMPORTED_MODULE_21__.BudgetDisplay, { title: "Wants", budgetAmount: wantsBudgetAmount !== null && wantsBudgetAmount !== void 0 ? wantsBudgetAmount : 0, percentageOfBudgetCaption: `${(_0 = (_z = wantsGoals[0]) === null || _z === void 0 ? void 0 : _z.share) !== null && _0 !== void 0 ? _0 : ""}% of overall budget`, unallocatedCaption: "Unallocated", allocatedCaption: "Allocated", unallocatedAmount: typeof wantsBudgetAmount === "number" || wantsBudgetAmount > 0
                                    ? Math.max(wantsBudgetAmount - allocatedWants, 0) // Ensure percentage stays between 0 and 100
                                    : 0, allocatedAmount: allocatedWants !== null && allocatedWants !== void 0 ? allocatedWants : 0, progressPercentage: typeof wantsBudgetAmount === "number" && wantsBudgetAmount > 0
                                    ? Math.min((allocatedWants / wantsBudgetAmount) * 100, 100) // Ensure percentage stays between 0 and 100
                                    : 0, progressColor: "#354AA6", indicatorColor: "bg-[#354AA6]" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-row items-center justify-center mt-6 mb-4" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-skin-base font-primary text-xs tracking-wide" }, { children: "Add budgets to your Wants below" })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: "border mt-4 mb-4.5" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "flex flex-row justify-between items-center mb-4" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-xs tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Categories" })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "text-xs tracking-wide font-medium text-skin-subtitle font-primary" }, { children: "Budget allocation" }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "flex flex-col" }, { children: categoriesStore.categoryBudgets[1] &&
                                    ((_1 = categoriesStore.categoryBudgets[1].data) === null || _1 === void 0 ? void 0 : _1.length) > 0
                                    ? categoriesStore.categoryBudgets[1].data.map((category, i) => {
                                        const data = wantsMapState.get(`data${i}`);
                                        const initialAmount = (category === null || category === void 0 ? void 0 : category.amount) || 0;
                                        const adjustment = (data === null || data === void 0 ? void 0 : data.amount) || 0;
                                        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_budget_BudgetSettingCard__WEBPACK_IMPORTED_MODULE_23__.BudgetSettingCard, { category: category === null || category === void 0 ? void 0 : category.name, emoji: category === null || category === void 0 ? void 0 : category.category.emoji, amount: data === null || data === void 0 ? void 0 : data.amount, maxValue: Number.MAX_SAFE_INTEGER, unallocatedAmount: typeof wantsBudgetAmount === "number" ||
                                                wantsBudgetAmount > 0
                                                ? Math.max(wantsBudgetAmount - allocatedWants, 0) // Ensure percentage stays between 0 and 100
                                                : 0, addValue: (e) => {
                                                updateWantsMap(i, Object.assign(Object.assign({}, data), { amount: e }));
                                                setAllocatedWants(allocatedWants + e);
                                            }, updateValue: (newValue) => {
                                                const oldValue = (data === null || data === void 0 ? void 0 : data.amount) || 0;
                                                const valueDifference = newValue - oldValue;
                                                const newAllocatedWnats = Math.max(0, allocatedWants + valueDifference);
                                                if (newAllocatedWnats <= essentialBudgetAmount) {
                                                    setAllocatedWants(newAllocatedWnats);
                                                    updateWantsMap(i, Object.assign(Object.assign({}, data), { amount: newValue }));
                                                }
                                                else {
                                                    (0,client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__.showCustomToast)({
                                                        message: "Budget limit exceeded",
                                                    });
                                                }
                                            }, increment: () => {
                                                const newAmount = ((data === null || data === void 0 ? void 0 : data.amount) || 0) +
                                                    categoriesStore.incrementalAmount;
                                                const totalAllocated = allocatedWants + categoriesStore.incrementalAmount;
                                                if (totalAllocated <= wantsBudgetAmount) {
                                                    setAllocatedWants(totalAllocated);
                                                    updateWantsMap(i, Object.assign(Object.assign({}, data), { amount: newAmount }));
                                                }
                                                else {
                                                    (0,client_utils_Toast__WEBPACK_IMPORTED_MODULE_9__.showCustomToast)({
                                                        message: "Budget limit exceeded",
                                                    });
                                                }
                                            }, decrement: () => {
                                                updateWantsMap(i, Object.assign(Object.assign({}, data), { amount: Math.max(adjustment - categoriesStore.incrementalAmount, 0) }));
                                                setAllocatedWants(allocatedWants - categoriesStore.incrementalAmount);
                                            } }, i));
                                    })
                                    : null }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_spring_bottom_sheet__WEBPACK_IMPORTED_MODULE_24__.BottomSheet, { onDismiss: () => {
                            savingsBottomSheetStore.setSavingsBottomSheet(false);
                        }, open: savingsBottomSheetStore.savingsBottomSheet, style: {
                            borderRadius: 24,
                        }, children: savingsSuccess ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(client_pages_components_budget_SuccessfullCreatedView__WEBPACK_IMPORTED_MODULE_25__["default"], { image: client_assets_images_success_icon_svg__WEBPACK_IMPORTED_MODULE_26__, title: "Whoop! Goal created", caption: "Duis aute categorize in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident.", onClick: () => {
                                setSavingsSuccess(false);
                                savingsBottomSheetStore.setSavingsBottomSheet(false);
                            } })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_SavingsGoalConfirmation__WEBPACK_IMPORTED_MODULE_27__["default"], { monthlyContribution: savingsBudgetAmount, targetAmount: essentialBudgetAmount * 3, progressPercentage: typeof savingsBudgetAmount === "number" &&
                                savingsBudgetAmount > 0
                                ? Math.min((allocatedSavings / savingsBudgetAmount) * 100, 100) // Ensure percentage stays between 0 and 100
                                : 0, emoji: "\uD83C\uDFAF", goal: selectedSavingsGoal.name, onClick: () => {
                                saveBudgetInfo().then((results) => {
                                    if (results.isSuccess) {
                                        setSavingsSuccess(true);
                                    }
                                });
                            } })), defaultSnap: 400 })] }))] })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EditBudgetSettings);


/***/ }),

/***/ "./src/client/store/budgetSettingsStore.ts":
/*!*************************************************!*\
  !*** ./src/client/store/budgetSettingsStore.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useBudgetSettingsStore: () => (/* binding */ useBudgetSettingsStore)
/* harmony export */ });
/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ "./node_modules/zustand/esm/index.mjs");

const useBudgetSettingsStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set) => ({
    currency: " KES",
    monthlyIncome: 0,
    incomeSplit: {
        essentials: 50,
        wants: 30,
        savings: 20,
    },
    setMonthlyIncome: (amount) => {
        return set((state) => {
            const result = Object.assign(Object.assign({}, state), { monthlyIncome: amount });
            return result;
        });
    },
    getMonthlyIncome: () => {
        return set((state) => {
            const result = Object.assign(Object.assign({}, state), { monthlyIncome: state.monthlyIncome });
            return result;
        });
    },
    setIncomeSplit: (split) => {
        return set((state) => {
            const result = Object.assign(Object.assign({}, state), { incomeSplit: split });
            return result;
        });
    },
    getIncomeSplit: () => {
        return set((state) => {
            const result = Object.assign(Object.assign({}, state), { incomeSplit: state.incomeSplit });
            return result;
        });
    },
}));



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,